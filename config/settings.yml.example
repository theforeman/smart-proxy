---
# SSL Setup

# if enabled, all communication would be verfied via SSL
# NOTE that both certificates need to be signed by the same CA in order for this to work
# see http://theforeman.org/projects/smart-proxy/wiki/SSL for more information
#:ssl_certificate: ssl/certs/fqdn.pem
#:ssl_ca_file: ssl/certs/ca.pem
#:ssl_private_key: ssl/private_keys/fqdn.key
# the hosts which the proxy accepts connections from
# commenting the following lines would mean every verified SSL connection allowed
#:trusted_hosts:
#- foreman.prod.domain
#- foreman.dev.domain

# enable the daemon to run in the background
:daemon: true
:daemon_pid: /var/run/foreman-proxy/foreman-proxy.pid

# port used by the proxy
:port: 8443

# Enable TFTP management
:tftp: false
:tftproot: /var/lib/tftpboot
# Defines the TFTP Servername to use, overrides the name in the subnet declaration
#:tftp_servername: tftp.domain.com

# Enable DNS management
:dns: false
# valid providers:
#   nsupdate
#   nsupdate_gss (for GSS-TSIG support)
:dns_provider: nsupdate
#:dns_key: /etc/rndc.key
# use this setting if you are managing a dns server which is not localhost though this proxy
#:dns_server: dns.domain.com
# use dns_tsig_* for GSS-TSIG updates using Kerberos.  Required for Windows MS DNS with
# Secure Dynamic Updates, or BIND as used in FreeIPA.  Set dns_provider to nsupdate_gss.
#:dns_tsig_keytab: /usr/share/foreman-proxy/dns.keytab
#:dns_tsig_principal: DNS/host.example.com@EXAMPLE.COM

# Enable DHCP management
:dhcp: false
# The vendor can be either isc or native_ms
:dhcp_vendor: isc
# dhcp_subnets is a Native MS implementation setting. It restricts the subnets queried to a
# subset, so as to reduce the query time.
#:dhcp_subnets: [192.168.205.0/255.255.255.128, 192.168.205.128/255.255.255.128]
# Settings for Ubuntu ISC
#:dhcp_config: /etc/dhcp3/dhcpd.conf
#:dhcp_leases: /var/lib/dhcp3/dhcpd.leases
# Settings for Redhat ISC
# Redhat 5
#:dhcp_config: /etc/dhcpd.conf
# Redhat 6
#:dhcp_config: /etc/dhcp/dhcpd.conf
#:dhcp_leases: /var/lib/dhcpd/dhcpd.leases
#:dhcp_key_name: secret_key_name
#:dhcp_key_secret: secret_key

# enable PuppetCA management
:puppetca: false
#:ssldir: /var/lib/puppet/ssl
#:puppetdir: /etc/puppet

# enable Puppet management
:puppet: false
# valid providers:
#   puppetrun   (for puppetrun/kick, deprecated in Puppet 3)
#   mcollective (uses mco puppet)
:puppet_provider: puppetrun
:puppet_conf: /etc/puppet/puppet.conf

# enable BMC management  (Bare metal power and bios controls)
# Available providers:
# - freeipmi / ipmitool - requires the appropriate package installed, and the rubyipmi gem
# - shell - for local reboot control (requires sudo access to /sbin/shutdown for the proxy user)
:bmc: false
#:bmc_default_provider: freeipmi

# Enable Realm (Kerberos) Management
# N.B. - the foreman-proxy user will need to have write permissions to
#        ~foreman-proxy/.ipa
# N.B. - the foreman-proxy user will need to have "Host Administration" &
#        "Host Enrollment" privileges in IPA as well as a keytab that says so!
#:realm: true
#:realm_vendor: ipa
#:realm_tsig_keytab: /usr/share/foreman-proxy/config/krb5.keytab
#:realm_tsig_principal: foreman-proxy@EXAMPLE.COM

# Where our proxy log files are stored
# filename or STDOUT
:log_file: /var/log/foreman-proxy/proxy.log
# valid options are
# WARN, DEBUG, ERROR, FATAL, INFO, UNKNOWN
:log_level: ERROR
